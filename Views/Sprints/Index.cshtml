@model PaginatedList<ScruMster.Areas.Identity.Data.Sprint>
@using Microsoft.AspNetCore.Identity
@using ScruMster.Areas.Identity.Data
@inject SignInManager<ScruMsterUser> SignInManager

@{
    ViewData["Title"] = "Sprint";
}
<br />
<h1>Index</h1>

@if (SignInManager.IsSignedIn(User) && (User.IsInRole("Admin") || User.IsInRole("Manager")))
{
    <button type="button" class="btn btn-outline-primary btn-sm">
        <a class=" nav-link text-primary" asp-action="Create">+Create New</a>
    </button>

}
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Name</a>
            </th>
            <th>
                Description
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Deadline</a>
            </th>
            <th>
                Is done
            </th>
            <th>
                Team
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Deadline)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsDone)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Team.Name)
                </td>
                <td>
                    @if (SignInManager.IsSignedIn(User) && (User.IsInRole("Admin") || User.IsInRole("Manager")))
                    {
                        <a class="text-primary" asp-action="Edit" asp-route-id="@item.SprintID">Edit</a>
                    }

                    <a class="text-primary" asp-action="Details" asp-route-id="@item.SprintID">Details</a>



                    @if (SignInManager.IsSignedIn(User) && (User.IsInRole("Admin") || User.IsInRole("Manager")))
                    {

                        <a class="text-danger" asp-action="Delete" asp-route-id="@item.SprintID">Delete</a>
                    }

                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>